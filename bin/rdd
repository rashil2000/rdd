#!/usr/bin/env node

const fs = require('fs')
const nopt = require('nopt')
const opn = require('opn')
const path = require('path')
const server = require('../server')

const logError = function(message) {
  console.error('rdd: ' + message)
  return process.exit(1)
}

const knownOptions = {
  open: Boolean,
  port: Number,
  usage: Boolean
}
const shortHands = {
  o: '--open',
  p: '--port',
  h: '--help'
}
const options = nopt(knownOptions, shortHands)

if (options.help) {
  return fs
    .createReadStream(path.join(__dirname, 'usage.txt'))
    .pipe(process.stdout)
}

const port = options.port || 8888
const url = 'http://localhost:' + port + '/'

let filePath = options.argv.remain[0]
if (filePath) {
  if (!fs.existsSync(filePath)) {
    logError(filePath + ': No such file')
  }
} else {
  const regExp = /^readme.(md|mkdn?|mdown|markdown)$/i
  filePath = fs.readdirSync('./').reduce(function(foundFilePath, filePath) {
    if (foundFilePath) {
      return foundFilePath
    }
    if (regExp.test(filePath)) {
      return filePath
    }
  }, null)
  if (!filePath) {
    return logError('Need a file')
  }
}

server(filePath, port, function(error) {
  return logError(error)
})
console.log('Serving on localhost:' + port)

if (options.open) {
  opn(url + filePath)
}
